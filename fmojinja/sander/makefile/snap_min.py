from ...mixin import SanderMixin
from ...__version__ import get_version
from argparse import ArgumentParser


class SnapMin(SanderMixin):
    """
    for snapshots minimization
    """
    @classmethod
    def template(cls) -> str:
        return f"# Generated by fmojinja version {get_version()}" + """
MD_ENGINE = sander # e.g. sander, pmemd, pmemd.cuda, mpi -n 8 pmemd.MPI
PREFIX := {{ prefix }}
RST_ := $(wildcard $(PREFIX)*.rst)
RESTART := $(RST_:%.rst=%.restart)


.PHONY: run
run: gen $(RESTART)

%.restart: %.rst
\t$(MD_ENGINE) -O -i $(PREFIX)min.mdin -o $*.mdout -p $*.parm -c $< -ref $< -r $@

.PHONY: gen
gen: $(PREFIX)min.mdin

$(PREFIX)min.mdin:
\tpython -m fmojinja.sander min \\
\t-rm "{{ restraint_mask }}" \\
\t-rw {{ restraint_wt }} \\
\t-drms {{ drms }} \\
\t-mc {{ maxcyc }} \\
\t-cut {{ cut_off }} \\
\t-ig {{ seed }} > $@

"""

    @classmethod
    def set_arguments(cls, p: ArgumentParser) -> ArgumentParser:
        p = super(SnapMin, cls).set_arguments(p)
        p.add_argument("-mc", "--maxcyc", default=10000)
        p.add_argument("-drms", default=1e-4)
        p.add_argument("-P", "--prefix", default="snapshots/")
        return p
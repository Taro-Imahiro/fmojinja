import argparse
from ..mixin import TemplateRendererMixin
from ..__version__ import get_version
from argparse import ArgumentParser

class Min(TemplateRendererMixin):

	@classmethod
	def template(cls):
		return f"! Generated by fmojinja version {get_version()}" + """
define       = {{ define }}
integrator   = steep     ; Algorithm (steep = steepest descent minimization)
emtol        = 1000.0    ; Stop minimization when the maximum force < 1000.0 kJ/mol/nm
emstep       = 0.01      ; Energy step size
nsteps       = 50000     ; Maximum number of (minimization) steps to perform
nstlist	     = 100       ; Frequency to update the neighbor list and long range forces
ns_type      = grid      ; Method to determine neighbor list (simple, grid)
coulombtype  = PME       ; Treatment of long range electrostatic interactions
rcoulomb     = 1.2       ; Short-range electrostatic cut-off
rvdw         = 1.2       ; Short-range Van der Waals cut-off
pbc          = xyz       ; Periodic Boundary Conditions (yes/no)
"""

	@classmethod
	def set_arguments(cls, p: ArgumentParser) -> ArgumentParser:
		p = super(Min, cls).set_arguments(p)
		p.add_argument("-def", "--define", choices=['-DPOSRES1'], default="         ", help="define")
		return p